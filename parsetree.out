[
  structure_item (transpile/option_match.ml[1,0+0]..[1,0+39])
    Pstr_type Rec
    [
      type_declaration "question" (transpile/option_match.ml[1,0+5]..[1,0+13]) (transpile/option_match.ml[1,0+0]..[1,0+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (transpile/option_match.ml[1,0+16]..[1,0+21])
                "Never" (transpile/option_match.ml[1,0+16]..[1,0+21])
                []
                None
              (transpile/option_match.ml[1,0+22]..[1,0+39])
                "Maybe" (transpile/option_match.ml[1,0+24]..[1,0+29])
                [
                  core_type (transpile/option_match.ml[1,0+33]..[1,0+39])
                    Ptyp_constr "string" (transpile/option_match.ml[1,0+33]..[1,0+39])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (transpile/option_match.ml[3,41+0]..[4,54+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (transpile/option_match.ml[3,41+4]..[3,41+8])
          Ppat_var "test" (transpile/option_match.ml[3,41+4]..[3,41+8])
        expression (transpile/option_match.ml[3,41+9]..[4,54+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (transpile/option_match.ml[3,41+9]..[3,41+10])
            Ppat_var "o" (transpile/option_match.ml[3,41+9]..[3,41+10])
          expression (transpile/option_match.ml[4,54+2]..[4,54+73])
            Pexp_match
            expression (transpile/option_match.ml[4,54+8]..[4,54+9])
              Pexp_ident "o" (transpile/option_match.ml[4,54+8]..[4,54+9])
            [
              <case>
                pattern (transpile/option_match.ml[4,54+15]..[4,54+22])
                  Ppat_construct "Maybe" (transpile/option_match.ml[4,54+15]..[4,54+20])
                  Some
                    []
                    pattern (transpile/option_match.ml[4,54+21]..[4,54+22])
                      Ppat_var "s" (transpile/option_match.ml[4,54+21]..[4,54+22])
                expression (transpile/option_match.ml[4,54+26]..[4,54+41])
                  Pexp_apply
                  expression (transpile/option_match.ml[4,54+26]..[4,54+39])
                    Pexp_ident "print_endline" (transpile/option_match.ml[4,54+26]..[4,54+39])
                  [
                    <arg>
                    Nolabel
                      expression (transpile/option_match.ml[4,54+40]..[4,54+41])
                        Pexp_ident "s" (transpile/option_match.ml[4,54+40]..[4,54+41])
                  ]
              <case>
                pattern (transpile/option_match.ml[4,54+44]..[4,54+49])
                  Ppat_construct "Never" (transpile/option_match.ml[4,54+44]..[4,54+49])
                  None
                expression (transpile/option_match.ml[4,54+53]..[4,54+73])
                  Pexp_apply
                  expression (transpile/option_match.ml[4,54+53]..[4,54+66])
                    Pexp_ident "print_endline" (transpile/option_match.ml[4,54+53]..[4,54+66])
                  [
                    <arg>
                    Nolabel
                      expression (transpile/option_match.ml[4,54+67]..[4,54+73])
                        Pexp_constant PConst_string("None",(transpile/option_match.ml[4,54+68]..[4,54+72]),None)
                  ]
            ]
    ]
  structure_item (transpile/option_match.ml[6,129+0]..[6,129+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (transpile/option_match.ml[6,129+4]..[6,129+5])
          Ppat_any
        expression (transpile/option_match.ml[6,129+8]..[6,129+27])
          Pexp_apply
          expression (transpile/option_match.ml[6,129+8]..[6,129+12])
            Pexp_ident "test" (transpile/option_match.ml[6,129+8]..[6,129+12])
          [
            <arg>
            Nolabel
              expression (transpile/option_match.ml[6,129+13]..[6,129+27])
                Pexp_construct "Maybe" (transpile/option_match.ml[6,129+14]..[6,129+19])
                Some
                  expression (transpile/option_match.ml[6,129+20]..[6,129+26])
                    Pexp_constant PConst_string("test",(transpile/option_match.ml[6,129+21]..[6,129+25]),None)
          ]
    ]
]

